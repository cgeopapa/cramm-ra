[{"F:\\Projects\\cramm-ra\\src\\index.tsx":"1","F:\\Projects\\cramm-ra\\src\\reportWebVitals.ts":"2","F:\\Projects\\cramm-ra\\src\\view\\AssetCartographyView.tsx":"3","F:\\Projects\\cramm-ra\\src\\dao\\FirebaseDAO.ts":"4","F:\\Projects\\cramm-ra\\src\\model\\Asset.ts":"5","F:\\Projects\\cramm-ra\\src\\model\\Category.ts":"6","F:\\Projects\\cramm-ra\\src\\controller\\CategoryController.ts":"7","F:\\Projects\\cramm-ra\\src\\controller\\AssetController.tsx":"8","F:\\Projects\\cramm-ra\\src\\model\\Owner.ts":"9","F:\\Projects\\cramm-ra\\src\\controller\\OwnerController.ts":"10","F:\\Projects\\cramm-ra\\src\\view\\HomeView.tsx":"11","F:\\Projects\\cramm-ra\\src\\view\\AssetEvaluationView.tsx":"12"},{"size":911,"mtime":1609003411772,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":7957,"mtime":1608575323960,"results":"16","hashOfConfig":"14"},{"size":3501,"mtime":1609004426045,"results":"17","hashOfConfig":"14"},{"size":1236,"mtime":1609004427728,"results":"18","hashOfConfig":"14"},{"size":189,"mtime":1608478322050,"results":"19","hashOfConfig":"14"},{"size":219,"mtime":1608398553172,"results":"20","hashOfConfig":"14"},{"size":827,"mtime":1608401423394,"results":"21","hashOfConfig":"14"},{"size":219,"mtime":1608478330745,"results":"22","hashOfConfig":"14"},{"size":586,"mtime":1608478481720,"results":"23","hashOfConfig":"14"},{"size":2564,"mtime":1609003656543,"results":"24","hashOfConfig":"14"},{"size":4819,"mtime":1609011035750,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lh7sin",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Projects\\cramm-ra\\src\\index.tsx",[],"F:\\Projects\\cramm-ra\\src\\reportWebVitals.ts",[],["53","54"],"F:\\Projects\\cramm-ra\\src\\view\\AssetCartographyView.tsx",["55"],"import 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Button } from 'primereact/button';\r\nimport { OverlayPanel } from 'primereact/overlaypanel';\r\nimport AssetController from '../controller/AssetController';\r\nimport CategoryController from '../controller/CategoryController';\r\nimport Owner from '../model/Owner';\r\nimport OwnerContrller from '../controller/OwnerController';\r\n\r\nexport default class AssetCartographyView extends Component{\r\n    private assetsController = new AssetController();\r\n    private categoryController = new CategoryController();\r\n    private ownerController = new OwnerContrller();\r\n    private initialAsset: any;\r\n    private op: any;\r\n    state: any;\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n\r\n        this.state = {\r\n            assets: null,\r\n            categories: null,\r\n            owners: null,\r\n            editingOwner: new Owner(),\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.setState({\r\n            assets: await this.assetsController.getAssetsForEditTable(),\r\n            categories: await this.categoryController.getCategpries(),\r\n            owners: await this.ownerController.getOwners(),\r\n            loading: false\r\n        });\r\n\r\n        this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n        this.categoryTemplate = this.categoryTemplate.bind(this);\r\n    }\r\n\r\n    onRowEditInit(event: any){\r\n        this.initialAsset={...this.state.assets[event.index]};\r\n        this.setState({editingAsset: this.initialAsset});\r\n    }\r\n\r\n    onRowEditCancel(event: any) {\r\n        let assets = this.state.assets;\r\n        assets[event.index] = this.initialAsset;\r\n\r\n        this.setState({ assets: assets });\r\n    }\r\n\r\n    async onRowEditSave(event: any){\r\n        const res = await this.assetsController.updateAsset(this.state.editingAsset);\r\n        if(res){\r\n            this.reloadAssets();\r\n        }\r\n        else{\r\n            this.onRowEditCancel(event);\r\n        }\r\n    }\r\n\r\n    async onOwnerEditSave(owner: Owner){\r\n        const res = await this.ownerController.createOwner(owner);\r\n        if(res){\r\n            this.setState({owners: await this.ownerController.getOwners()});    \r\n            this.op.hide();\r\n        }\r\n    }\r\n\r\n    async reloadAssets(){\r\n        this.setState({loading: true});\r\n        this.setState({ \r\n            assets: await this.assetsController.getAssetsForEditTable(),\r\n            loading: false\r\n        });\r\n}\r\n\r\n    inputTextEditor(asset: any, field: string) {\r\n        return <InputText type=\"text\" placeholder={field} defaultValue={asset[field]}\r\n        onChange={(e) => this.state.editingAsset[field]=e.currentTarget.value}/>\r\n    }\r\n\r\n    inputCategoryEditor(asset: any) {\r\n        return (\r\n            <Dropdown optionLabel=\"name\" value={this.state.editingAsset.category} options={this.state.categories} \r\n            appendTo={document.body} placeholder=\"category\"\r\n            onChange={(e) => {\r\n                let editingAsset = this.state.editingAsset;\r\n                editingAsset.category = e.value;\r\n                this.setState({editingAsset: editingAsset})}}/>\r\n        )\r\n    }\r\n\r\n    inputLocationEditor(asset: any) {\r\n        return (\r\n            <Dropdown optionLabel=\"name\" optionValue=\"name\" value={this.state.editingAsset.location} options={this.state.assets}\r\n            appendTo={document.body} placeholder=\"location\"\r\n            onChange={(e) => {\r\n                let editingAsset = this.state.editingAsset;\r\n                editingAsset.location = e.value;\r\n                this.setState({editingAsset: editingAsset})}}/>\r\n        )\r\n    }\r\n    \r\n    inputOwnerEditor(asset: any) {\r\n        return (\r\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                <Dropdown optionLabel=\"name\" value={this.state.editingAsset.owner} options={this.state.owners} \r\n                appendTo={document.body} placeholder=\"owner\"\r\n                onChange={(e) => {\r\n                    let editingAsset = this.state.editingAsset;\r\n                    editingAsset.owner = e.value;\r\n                    this.setState({editingAsset: editingAsset})}}/> \r\n                <Button label=\"Create new owner\" className=\"p-button-text p-button-sm\" onClick={(e) => this.op.toggle(e)} />\r\n\r\n                <OverlayPanel showCloseIcon  ref={(el) => this.op = el}>\r\n                    <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                        <h5>New owner</h5>\r\n                        <span className=\"p-float-label\">\r\n                            <InputText id=\"ownerName\" value={this.state.editingOwner.name}\r\n                            onChange={(e) => this.setState({editingOwner: {...this.state.editingOwner, name: e.currentTarget.value}})}/>\r\n                            <label htmlFor=\"ownerName\">Name</label>\r\n                        </span>\r\n                        <span className=\"p-float-label p-my-5\">\r\n                            <InputText id=\"ownerEmail\" value={this.state.editingOwner.email}\r\n                            onChange={(e) => this.setState({editingOwner: {...this.state.editingOwner, email: e.currentTarget.value}})}/>\r\n                            <label htmlFor=\"ownerEmail\">Email</label>\r\n                        </span>\r\n                        <div style={{display:\"flex\", flexDirection:\"row\", width:\"100%\"}}>\r\n                            <Button label=\"Create\" className=\"p-button-sm\" onClick={(e) => this.onOwnerEditSave(this.state.editingOwner)}/>\r\n                            <Button label=\"Cancel\" className=\"p-button-text p-button-sm\" onClick={(e) => this.op.hide()}/>\r\n                        </div>\r\n                    </div>\r\n                </OverlayPanel>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    categoryTemplate(asset: any){\r\n        return asset.category.name;\r\n    }\r\n\r\n    ownerTemplate(asset: any){\r\n        return (\r\n            <div>\r\n                <div className=\"p-text-normal\">{asset.owner.name}</div>\r\n                <div className=\"p-text-light\">{asset.owner.email}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const header = (\r\n            <h1 className=\"p-text-light p-m-0\">Asset Chartography tool</h1>\r\n        )\r\n        return (\r\n            <div style={{width:\"100%\", height:\"100%\"}} className=\"card\">\r\n                <DataTable loading={this.state.loading} value={this.state.assets} editMode=\"row\" sortMode=\"multiple\" className=\"p-datatable-striped\"\r\n                resizableColumns columnResizeMode=\"fit\" header={header}\r\n                onRowEditInit={(e) => this.onRowEditInit(e)} onRowEditCancel={(e) => this.onRowEditCancel(e)} onRowEditSave={(e) => this.onRowEditSave(e)}>\r\n                    <Column field=\"name\" header=\"Asset Name\" sortable editor={(e) => this.inputTextEditor(e.rowData, \"name\")}/>\r\n                    <Column field=\"description\" header=\"Description\" sortable editor={(e) => this.inputTextEditor(e.rowData, \"description\")}/>\r\n                    <Column field=\"category\" header=\"Category\" sortable body={this.categoryTemplate} editor={(e) => this.inputCategoryEditor(e.rowData)}/>\r\n                    <Column field=\"owner\" header=\"Owner\" sortable body={this.ownerTemplate} editor={(e) => this.inputOwnerEditor(e.rowData)}/>\r\n                    <Column field=\"location\" header=\"Location\" sortable editor={(e) => this.inputLocationEditor(e.rowData)}/>\r\n                    <Column rowEditor headerStyle={{ width: '7rem' }} bodyStyle={{ textAlign: 'center' }}></Column>\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}","F:\\Projects\\cramm-ra\\src\\dao\\FirebaseDAO.ts",[],"F:\\Projects\\cramm-ra\\src\\model\\Asset.ts",[],"F:\\Projects\\cramm-ra\\src\\model\\Category.ts",[],"F:\\Projects\\cramm-ra\\src\\controller\\CategoryController.ts",[],"F:\\Projects\\cramm-ra\\src\\controller\\AssetController.tsx",[],"F:\\Projects\\cramm-ra\\src\\model\\Owner.ts",[],"F:\\Projects\\cramm-ra\\src\\controller\\OwnerController.ts",["56"],"import FirebaseDAO from \"../dao/FirebaseDAO\";\r\nimport Owner from \"../model/Owner\";\r\n\r\nexport default class OwnerContrller{\r\n    dao = new FirebaseDAO();\r\n\r\n    public async getOwners(){\r\n        return await this.dao.getOwners();\r\n    }\r\n\r\n    public createOwner(owner: Owner){\r\n        const emailRegEx = /^\\S+\\@\\S+(\\.\\S*)+$/;\r\n        console.log(emailRegEx.test(owner.email));\r\n        if(owner.name.length > 0 && emailRegEx.test(owner.email)){\r\n            delete owner.id;\r\n            this.dao.addOwner(owner);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}","F:\\Projects\\cramm-ra\\src\\view\\HomeView.tsx",[],"F:\\Projects\\cramm-ra\\src\\view\\AssetEvaluationView.tsx",["57","58","59","60","61","62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":90,"column":26,"nodeType":"70","endLine":90,"endColumn":49},{"ruleId":"71","severity":1,"message":"72","line":12,"column":33,"nodeType":"73","messageId":"74","endLine":12,"endColumn":34,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":18},{"ruleId":"76","severity":1,"message":"81","line":11,"column":10,"nodeType":"78","messageId":"79","endLine":11,"endColumn":16},{"ruleId":"76","severity":1,"message":"82","line":12,"column":10,"nodeType":"78","messageId":"79","endLine":12,"endColumn":22},{"ruleId":"76","severity":1,"message":"83","line":16,"column":8,"nodeType":"78","messageId":"79","endLine":16,"endColumn":26},{"ruleId":"76","severity":1,"message":"84","line":17,"column":8,"nodeType":"78","messageId":"79","endLine":17,"endColumn":13},{"ruleId":"76","severity":1,"message":"85","line":18,"column":8,"nodeType":"78","messageId":"79","endLine":18,"endColumn":22},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-useless-escape","Unnecessary escape character: \\@.","Literal","unnecessaryEscape",["88","89"],"@typescript-eslint/no-unused-vars","'InputText' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'Button' is defined but never used.","'OverlayPanel' is defined but never used.","'CategoryController' is defined but never used.","'Owner' is defined but never used.","'OwnerContrller' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"90","fix":"91","desc":"92"},{"messageId":"93","fix":"94","desc":"95"},"removeEscape",{"range":"96","text":"97"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"98","text":"99"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[311,312],"",[311,311],"\\"]