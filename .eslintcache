[{"/mnt/f/Projects/cramm-ra/src/index.tsx":"1","/mnt/f/Projects/cramm-ra/src/reportWebVitals.ts":"2","/mnt/f/Projects/cramm-ra/src/view/HomeView.tsx":"3","/mnt/f/Projects/cramm-ra/src/view/AssetCartographyView.tsx":"4","/mnt/f/Projects/cramm-ra/src/view/AssetEvaluationView.tsx":"5","/mnt/f/Projects/cramm-ra/src/view/ThreadEvaluationView.tsx":"6","/mnt/f/Projects/cramm-ra/src/view/ResultTableView.tsx":"7","/mnt/f/Projects/cramm-ra/src/controller/OwnerController.ts":"8","/mnt/f/Projects/cramm-ra/src/model/VulLevels.ts":"9","/mnt/f/Projects/cramm-ra/src/model/Owner.ts":"10","/mnt/f/Projects/cramm-ra/src/controller/CategoryController.ts":"11","/mnt/f/Projects/cramm-ra/src/model/Scales.ts":"12","/mnt/f/Projects/cramm-ra/src/model/ThreatLevels.ts":"13","/mnt/f/Projects/cramm-ra/src/controller/ThreatController.ts":"14","/mnt/f/Projects/cramm-ra/src/controller/AssetController.tsx":"15","/mnt/f/Projects/cramm-ra/src/model/HazardScale.ts":"16","/mnt/f/Projects/cramm-ra/src/model/Threat.ts":"17","/mnt/f/Projects/cramm-ra/src/dao/FirebaseDAO.ts":"18","/mnt/f/Projects/cramm-ra/src/model/Asset.ts":"19","/mnt/f/Projects/cramm-ra/src/model/Category.ts":"20"},{"size":1166,"mtime":1612105273336,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1612105273354,"results":"23","hashOfConfig":"22"},{"size":2673,"mtime":1612105273382,"results":"24","hashOfConfig":"22"},{"size":7779,"mtime":1612105273372,"results":"25","hashOfConfig":"22"},{"size":7166,"mtime":1612105273382,"results":"26","hashOfConfig":"22"},{"size":6406,"mtime":1612105273395,"results":"27","hashOfConfig":"22"},{"size":6015,"mtime":1612276026790,"results":"28","hashOfConfig":"22"},{"size":566,"mtime":1612105273327,"results":"29","hashOfConfig":"22"},{"size":54,"mtime":1612105273354,"results":"30","hashOfConfig":"22"},{"size":209,"mtime":1612105273352,"results":"31","hashOfConfig":"22"},{"size":213,"mtime":1612105273327,"results":"32","hashOfConfig":"22"},{"size":1895,"mtime":1612105273352,"results":"33","hashOfConfig":"22"},{"size":85,"mtime":1612105273353,"results":"34","hashOfConfig":"22"},{"size":1223,"mtime":1612105273327,"results":"35","hashOfConfig":"22"},{"size":1363,"mtime":1612105273326,"results":"36","hashOfConfig":"22"},{"size":165,"mtime":1612105273352,"results":"37","hashOfConfig":"22"},{"size":372,"mtime":1612105273353,"results":"38","hashOfConfig":"22"},{"size":4274,"mtime":1612105273335,"results":"39","hashOfConfig":"22"},{"size":781,"mtime":1612105273351,"results":"40","hashOfConfig":"22"},{"size":179,"mtime":1612105273351,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1eizvzy",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"/mnt/f/Projects/cramm-ra/src/index.tsx",[],["86","87"],"/mnt/f/Projects/cramm-ra/src/reportWebVitals.ts",[],"/mnt/f/Projects/cramm-ra/src/view/HomeView.tsx",[],"/mnt/f/Projects/cramm-ra/src/view/AssetCartographyView.tsx",["88"],"import 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\n\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Button } from 'primereact/button';\nimport { OverlayPanel } from 'primereact/overlaypanel';\nimport AssetController from '../controller/AssetController';\nimport CategoryController from '../controller/CategoryController';\nimport Owner from '../model/Owner';\nimport OwnerContrller from '../controller/OwnerController';\n\nexport default class AssetCartographyView extends Component{\n    private assetsController = new AssetController();\n    private categoryController = new CategoryController();\n    private ownerController = new OwnerContrller();\n    private initialAsset: any;\n    private op: any;\n    state: any;\n\n    constructor(props: any){\n        super(props);\n\n        this.state = {\n            assets: null,\n            categories: null,\n            owners: null,\n            editingOwner: new Owner(),\n            loading: true\n        }\n    }\n\n    async componentDidMount(){\n        this.setState({\n            assets: await this.assetsController.getAssetsForEditTable(),\n            categories: await this.categoryController.getCategpries(),\n            owners: await this.ownerController.getOwners(),\n            loading: false\n        });\n\n        this.onRowEditCancel = this.onRowEditCancel.bind(this);\n        this.categoryTemplate = this.categoryTemplate.bind(this);\n    }\n\n    onRowEditInit(event: any){\n        this.initialAsset={...this.state.assets[event.index]};\n        this.setState({editingAsset: this.initialAsset});\n    }\n\n    onRowEditCancel(event: any) {\n        let assets = this.state.assets;\n        assets[event.index] = this.initialAsset;\n\n        this.setState({ assets: assets });\n    }\n\n    async onRowEditSave(event: any){\n        const res = await this.assetsController.updateAsset(this.state.editingAsset);\n        if(res){\n            this.reloadAssets();\n        }\n        else{\n            this.onRowEditCancel(event);\n        }\n    }\n\n    async onOwnerEditSave(owner: Owner){\n        const res = await this.ownerController.createOwner(owner);\n        if(res){\n            this.setState({owners: await this.ownerController.getOwners()});    \n            this.op.hide();\n        }\n    }\n\n    async reloadAssets(){\n        this.setState({loading: true});\n        this.setState({ \n            assets: await this.assetsController.getAssetsForEditTable(),\n            loading: false\n        });\n}\n\n    inputTextEditor(asset: any, field: string) {\n        return <InputText type=\"text\" placeholder={field} defaultValue={asset[field]}\n        onChange={(e) => this.state.editingAsset[field]=e.currentTarget.value}/>\n    }\n\n    inputCategoryEditor(asset: any) {\n        return (\n            <Dropdown optionLabel=\"name\" value={this.state.editingAsset.category} options={this.state.categories} \n            appendTo={document.body} placeholder=\"category\"\n            onChange={(e) => {\n                let editingAsset = this.state.editingAsset;\n                editingAsset.category = e.value;\n                this.setState({editingAsset: editingAsset})}}/>\n        )\n    }\n\n    inputLocationEditor(asset: any) {\n        return (\n            <Dropdown optionLabel=\"name\" optionValue=\"name\" value={this.state.editingAsset.location} options={this.state.assets}\n            appendTo={document.body} placeholder=\"location\"\n            onChange={(e) => {\n                let editingAsset = this.state.editingAsset;\n                editingAsset.location = e.value;\n                this.setState({editingAsset: editingAsset})}}/>\n        )\n    }\n    \n    inputOwnerEditor(asset: any) {\n        return (\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                <Dropdown optionLabel=\"name\" value={this.state.editingAsset.owner} options={this.state.owners} \n                appendTo={document.body} placeholder=\"owner\"\n                onChange={(e) => {\n                    let editingAsset = this.state.editingAsset;\n                    editingAsset.owner = e.value;\n                    this.setState({editingAsset: editingAsset})}}/> \n                <Button label=\"Create new owner\" className=\"p-button-text p-button-sm\" onClick={(e) => this.op.toggle(e)} />\n\n                <OverlayPanel showCloseIcon  ref={(el) => this.op = el}>\n                    <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                        <h5>New owner</h5>\n                        <span className=\"p-float-label\">\n                            <InputText id=\"ownerName\" value={this.state.editingOwner.name}\n                            onChange={(e) => this.setState({editingOwner: {...this.state.editingOwner, name: e.currentTarget.value}})}/>\n                            <label htmlFor=\"ownerName\">Name</label>\n                        </span>\n                        <span className=\"p-float-label p-my-5\">\n                            <InputText id=\"ownerEmail\" value={this.state.editingOwner.email}\n                            onChange={(e) => this.setState({editingOwner: {...this.state.editingOwner, email: e.currentTarget.value}})}/>\n                            <label htmlFor=\"ownerEmail\">Email</label>\n                        </span>\n                        <div style={{display:\"flex\", flexDirection:\"row\", width:\"100%\"}}>\n                            <Button label=\"Create\" className=\"p-button-sm\" onClick={(e) => this.onOwnerEditSave(this.state.editingOwner)}/>\n                            <Button label=\"Cancel\" className=\"p-button-text p-button-sm\" onClick={(e) => this.op.hide()}/>\n                        </div>\n                    </div>\n                </OverlayPanel>\n            </div>\n        )\n    }\n\n    categoryTemplate(asset: any){\n        return asset.category.name;\n    }\n\n    ownerTemplate(asset: any){\n        return (\n            <div>\n                <div className=\"p-text-normal\">{asset.owner.name}</div>\n                <div className=\"p-text-light\">{asset.owner.email}</div>\n            </div>\n        );\n    }\n\n    render(){\n        const header = (\n            <h1 className=\"p-text-light p-m-0\">Asset Chartography tool</h1>\n        )\n        return (\n            <div style={{width:\"100%\", height:\"100%\"}} className=\"p-card\">\n                <DataTable loading={this.state.loading} value={this.state.assets} editMode=\"row\" sortMode=\"multiple\" className=\"p-datatable-striped\"\n                resizableColumns columnResizeMode=\"fit\" header={header}\n                onRowEditInit={(e) => this.onRowEditInit(e)} onRowEditCancel={(e) => this.onRowEditCancel(e)} onRowEditSave={(e) => this.onRowEditSave(e)}>\n                    <Column field=\"name\" header=\"Asset Name\" sortable editor={(e) => this.inputTextEditor(e.rowData, \"name\")}/>\n                    <Column field=\"description\" header=\"Description\" sortable editor={(e) => this.inputTextEditor(e.rowData, \"description\")}/>\n                    <Column field=\"category\" header=\"Category\" sortable body={this.categoryTemplate} editor={(e) => this.inputCategoryEditor(e.rowData)}/>\n                    <Column field=\"owner\" header=\"Owner\" sortable body={this.ownerTemplate} editor={(e) => this.inputOwnerEditor(e.rowData)}/>\n                    <Column field=\"location\" header=\"Location\" sortable editor={(e) => this.inputLocationEditor(e.rowData)}/>\n                    <Column rowEditor headerStyle={{ width: '7rem' }} bodyStyle={{ textAlign: 'center' }}></Column>\n                </DataTable>\n            </div>\n        );\n    }\n}","/mnt/f/Projects/cramm-ra/src/view/AssetEvaluationView.tsx",[],"/mnt/f/Projects/cramm-ra/src/view/ThreadEvaluationView.tsx",[],"/mnt/f/Projects/cramm-ra/src/view/ResultTableView.tsx",[],"/mnt/f/Projects/cramm-ra/src/controller/OwnerController.ts",["89"],"import FirebaseDAO from \"../dao/FirebaseDAO\";\nimport Owner from \"../model/Owner\";\n\nexport default class OwnerContrller{\n    dao = new FirebaseDAO();\n\n    public async getOwners(){\n        return await this.dao.getOwners();\n    }\n\n    public createOwner(owner: Owner){\n        const emailRegEx = /^\\S+\\@\\S+(\\.\\S*)+$/;\n        console.log(emailRegEx.test(owner.email));\n        if(owner.name.length > 0 && emailRegEx.test(owner.email)){\n            delete owner.id;\n            this.dao.addOwner(owner);\n            return true;\n        }\n        return false;\n    }\n}","/mnt/f/Projects/cramm-ra/src/model/VulLevels.ts",[],"/mnt/f/Projects/cramm-ra/src/model/Owner.ts",[],"/mnt/f/Projects/cramm-ra/src/controller/CategoryController.ts",[],"/mnt/f/Projects/cramm-ra/src/model/Scales.ts",[],"/mnt/f/Projects/cramm-ra/src/model/ThreatLevels.ts",[],"/mnt/f/Projects/cramm-ra/src/controller/ThreatController.ts",[],"/mnt/f/Projects/cramm-ra/src/controller/AssetController.tsx",[],"/mnt/f/Projects/cramm-ra/src/model/HazardScale.ts",[],"/mnt/f/Projects/cramm-ra/src/model/Threat.ts",[],"/mnt/f/Projects/cramm-ra/src/dao/FirebaseDAO.ts",[],"/mnt/f/Projects/cramm-ra/src/model/Asset.ts",[],"/mnt/f/Projects/cramm-ra/src/model/Category.ts",[],["90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":90,"column":26,"nodeType":"98","endLine":90,"endColumn":49},{"ruleId":"99","severity":1,"message":"100","line":12,"column":33,"nodeType":"101","messageId":"102","endLine":12,"endColumn":34,"suggestions":"103"},{"ruleId":"92","replacedBy":"104"},{"ruleId":"94","replacedBy":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-useless-escape","Unnecessary escape character: \\@.","Literal","unnecessaryEscape",["108","109"],["106"],["107"],"no-global-assign","no-unsafe-negation",{"messageId":"110","fix":"111","desc":"112"},{"messageId":"113","fix":"114","desc":"115"},"removeEscape",{"range":"116","text":"117"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"118","text":"119"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[300,301],"",[300,300],"\\"]